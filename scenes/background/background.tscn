[gd_scene load_steps=18 format=3 uid="uid://cxdkw4g14655c"]

[ext_resource type="Script" path="res://scenes/background/scripts/background_layer.gd" id="1_48uix"]
[ext_resource type="Script" path="res://scenes/background/scripts/background.gd" id="1_lpf5v"]
[ext_resource type="Script" path="res://scenes/background/scripts/background_sprite.gd" id="3_u112l"]
[ext_resource type="Material" uid="uid://c282gyqimhled" path="res://scenes/background/shaders/space_background_material.tres" id="5_vd4ej"]

[sub_resource type="PlaceholderTexture2D" id="PlaceholderTexture2D_3kmxh"]

[sub_resource type="Gradient" id="Gradient_3tpli"]
colors = PackedColorArray(0, 0.52, 0.87, 0.2, 0, 0.67, 0.75, 0.2)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_bv6vi"]
gradient = SubResource("Gradient_3tpli")
width = 1024
height = 1024
fill = 1
fill_from = Vector2(0.5, 0.5)

[sub_resource type="Shader" id="Shader_4q312"]
code = "shader_type canvas_item;

uniform float scale = 1.0;
uniform float zoom = 1.0;
uniform vec2 offset;
uniform sampler2D mask_texture : repeat_enable;
uniform sampler2D shift_texture : repeat_enable;

void fragment() {
	vec4 color = vec4(0.0);
	float mult_base = 8.0;
	float mult = mult_base;
	int i = 1;
	for (; i < 5; i += 1) {
		vec2 shift_zoomed_uv = (UV - vec2(0.5, 0.5)) / (zoom * mult)  + vec2(0.5, 0.5);
		vec2 shift_uv = shift_zoomed_uv + offset * scale / mult;
		vec2 shift = texture(shift_texture, shift_uv).rg;
		vec4 base = texture(TEXTURE, shift);
		vec4 mask = texture(mask_texture, shift);
		color = mix(color, mask * base, 0.5);
		mult *= mult_base;
	}
	vec2 zoomed_uv = (UV - vec2(0.5, 0.5)) / zoom  + vec2(0.5, 0.5);
	vec2 mask_uv = zoomed_uv + offset * scale;
	//color = pow(color, vec4(1.0) / float(i));
	COLOR = color;// * texture(mask_texture, mask_uv) * texture(TEXTURE, color.rg);
		//mult *= mult;
		//mask_zoomed_uv = (UV - vec2(0.5, 0.5)) / (zoom * mult)  + vec2(0.5, 0.5);
		//mask_uv = mask_zoomed_uv + offset * scale / mult;
		//mask = texture(mask_texture, mask_uv, 0.0).r;
		//a = a + pow(mask + 0.5, 2.0) - 0.5;
	//};
	
	
	//vec2 zoomed_uv = (UV - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);
    //vec2 offset_uv = zoomed_uv + offset * scale;
	//vec4 base = texture(TEXTURE, offset_uv);
	//vec4 mask = texture(mask_texture, offset_uv);
	//base = base * mask * mask;
	
}



//shader_type canvas_item;
//
//uniform float scale = 1.0;
//uniform float zoom = 1.0;
//uniform vec2 offset;
//uniform sampler2D mask_texture : repeat_enable;
//
//void fragment() {
	//vec2 zoomed_uv = (UV - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);
    //vec2 offset_uv = zoomed_uv + offset * scale;
	//vec4 main = texture(TEXTURE, offset_uv);
	//vec2 mask_zoomed_uv;
	//vec2 mask_uv;
	//float mask;
	//float a = main.a;
	//float mult = 2.0;
	//int i = 1;
	//for (; i < 8; i += 1) {
		//mult *= mult;
		//mask_zoomed_uv = (UV - vec2(0.5, 0.5)) / (zoom * mult)  + vec2(0.5, 0.5);
		//mask_uv = mask_zoomed_uv + offset * scale / mult;
		//mask = texture(mask_texture, mask_uv, 0.0).r;
		//a = a + pow(mask + 0.5, 2.0) - 0.5;
	//};
	//a = pow(a / 8.0, 8.0);
	//main.a = a;
	//COLOR = main;
//}
//
//
//
"
metadata/_edit_res_path = "res://scenes/background/background.tscn::Shader_4q312"

[sub_resource type="Gradient" id="Gradient_k3mub"]
offsets = PackedFloat32Array(0.660853, 1)
colors = PackedColorArray(0, 0, 0, 0, 1, 1, 1, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_x3d8j"]
noise_type = 3
seed = 2
frequency = 0.005

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_82ana"]
width = 1024
height = 1024
seamless = true
color_ramp = SubResource("Gradient_k3mub")
noise = SubResource("FastNoiseLite_x3d8j")

[sub_resource type="Gradient" id="Gradient_7n6nd"]
colors = PackedColorArray(0, 0, 0, 0, 1, 1, 1, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_xpej7"]
noise_type = 3
seed = 3

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ql3yj"]
seamless = true
color_ramp = SubResource("Gradient_7n6nd")
noise = SubResource("FastNoiseLite_xpej7")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_00khc"]
shader = SubResource("Shader_4q312")
shader_parameter/scale = 1.0
shader_parameter/zoom = 1.0
shader_parameter/offset = null
shader_parameter/mask_texture = SubResource("NoiseTexture2D_82ana")
shader_parameter/shift_texture = SubResource("NoiseTexture2D_ql3yj")

[sub_resource type="Gradient" id="Gradient_b8tcl"]
colors = PackedColorArray(2, 0, 0.46, 0.2, 0.769512, 0.380152, 1, 0.2)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_mxjsr"]
gradient = SubResource("Gradient_b8tcl")
width = 1024
height = 1024
use_hdr = true
fill = 1
fill_from = Vector2(0.5, 0.5)

[node name="Background" type="Node2D"]
script = ExtResource("1_lpf5v")

[node name="Layers" type="CanvasLayer" parent="."]
unique_name_in_owner = true
layer = -128

[node name="Sprite2D" type="Sprite2D" parent="Layers"]
modulate = Color(0, 0, 0, 1)
position = Vector2(2048, 2048)
scale = Vector2(5000, 5000)
texture = SubResource("PlaceholderTexture2D_3kmxh")

[node name="Nebula2" type="Node" parent="Layers"]
script = ExtResource("1_48uix")
shift_scale = 0.1

[node name="BackgroundSprite" type="Sprite2D" parent="Layers/Nebula2"]
visible = false
texture_repeat = 2
material = ExtResource("5_vd4ej")
texture = SubResource("GradientTexture2D_bv6vi")
script = ExtResource("3_u112l")

[node name="Nebula3" type="Node" parent="Layers"]
script = ExtResource("1_48uix")
shift_scale = 0.2

[node name="BackgroundSprite2" type="Sprite2D" parent="Layers/Nebula3"]
texture_repeat = 2
material = ExtResource("5_vd4ej")
texture = SubResource("GradientTexture2D_bv6vi")
script = ExtResource("3_u112l")

[node name="BackgroundSprite" type="Sprite2D" parent="Layers/Nebula3"]
texture_repeat = 2
material = SubResource("ShaderMaterial_00khc")
texture = SubResource("GradientTexture2D_mxjsr")
script = ExtResource("3_u112l")
